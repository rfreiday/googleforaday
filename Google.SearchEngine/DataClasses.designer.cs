#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.SearchEngine
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Google")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertweb_domain(web_domain instance);
    partial void Updateweb_domain(web_domain instance);
    partial void Deleteweb_domain(web_domain instance);
    partial void Insertweb_page_link(web_page_link instance);
    partial void Updateweb_page_link(web_page_link instance);
    partial void Deleteweb_page_link(web_page_link instance);
    partial void Insertweb_keyword(web_keyword instance);
    partial void Updateweb_keyword(web_keyword instance);
    partial void Deleteweb_keyword(web_keyword instance);
    partial void Insertweb_page(web_page instance);
    partial void Updateweb_page(web_page instance);
    partial void Deleteweb_page(web_page instance);
    partial void Insertweb_page_keyword(web_page_keyword instance);
    partial void Updateweb_page_keyword(web_page_keyword instance);
    partial void Deleteweb_page_keyword(web_page_keyword instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::Google.SearchEngine.Properties.Settings.Default.GoogleConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<web_domain> web_domains
		{
			get
			{
				return this.GetTable<web_domain>();
			}
		}
		
		public System.Data.Linq.Table<web_page_link> web_page_links
		{
			get
			{
				return this.GetTable<web_page_link>();
			}
		}
		
		public System.Data.Linq.Table<web_keyword> web_keywords
		{
			get
			{
				return this.GetTable<web_keyword>();
			}
		}
		
		public System.Data.Linq.Table<web_page> web_pages
		{
			get
			{
				return this.GetTable<web_page>();
			}
		}
		
		public System.Data.Linq.Table<web_page_keyword> web_page_keywords
		{
			get
			{
				return this.GetTable<web_page_keyword>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.web_domain")]
	public partial class web_domain : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _domain_name;
		
		private EntitySet<web_page> _web_pages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondomain_nameChanging(string value);
    partial void Ondomain_nameChanged();
    #endregion
		
		public web_domain()
		{
			this._web_pages = new EntitySet<web_page>(new Action<web_page>(this.attach_web_pages), new Action<web_page>(this.detach_web_pages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_domain_name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string domain_name
		{
			get
			{
				return this._domain_name;
			}
			set
			{
				if ((this._domain_name != value))
				{
					this.Ondomain_nameChanging(value);
					this.SendPropertyChanging();
					this._domain_name = value;
					this.SendPropertyChanged("domain_name");
					this.Ondomain_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="web_domain_web_page", Storage="_web_pages", ThisKey="id", OtherKey="web_domain_id")]
		public EntitySet<web_page> web_pages
		{
			get
			{
				return this._web_pages;
			}
			set
			{
				this._web_pages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_web_pages(web_page entity)
		{
			this.SendPropertyChanging();
			entity.web_domain = this;
		}
		
		private void detach_web_pages(web_page entity)
		{
			this.SendPropertyChanging();
			entity.web_domain = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.web_page_link")]
	public partial class web_page_link : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _web_page_id;
		
		private int _linked_page_id;
		
		private EntityRef<web_page> _web_page;
		
		private EntityRef<web_page> _web_page1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onweb_page_idChanging(int value);
    partial void Onweb_page_idChanged();
    partial void Onlinked_page_idChanging(int value);
    partial void Onlinked_page_idChanged();
    #endregion
		
		public web_page_link()
		{
			this._web_page = default(EntityRef<web_page>);
			this._web_page1 = default(EntityRef<web_page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_web_page_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int web_page_id
		{
			get
			{
				return this._web_page_id;
			}
			set
			{
				if ((this._web_page_id != value))
				{
					if (this._web_page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onweb_page_idChanging(value);
					this.SendPropertyChanging();
					this._web_page_id = value;
					this.SendPropertyChanged("web_page_id");
					this.Onweb_page_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_linked_page_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int linked_page_id
		{
			get
			{
				return this._linked_page_id;
			}
			set
			{
				if ((this._linked_page_id != value))
				{
					if (this._web_page1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlinked_page_idChanging(value);
					this.SendPropertyChanging();
					this._linked_page_id = value;
					this.SendPropertyChanged("linked_page_id");
					this.Onlinked_page_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="web_page_web_page_link", Storage="_web_page", ThisKey="web_page_id", OtherKey="id", IsForeignKey=true)]
		public web_page web_page
		{
			get
			{
				return this._web_page.Entity;
			}
			set
			{
				web_page previousValue = this._web_page.Entity;
				if (((previousValue != value) 
							|| (this._web_page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._web_page.Entity = null;
						previousValue.web_page_links.Remove(this);
					}
					this._web_page.Entity = value;
					if ((value != null))
					{
						value.web_page_links.Add(this);
						this._web_page_id = value.id;
					}
					else
					{
						this._web_page_id = default(int);
					}
					this.SendPropertyChanged("web_page");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="web_page_web_page_link1", Storage="_web_page1", ThisKey="linked_page_id", OtherKey="id", IsForeignKey=true)]
		public web_page web_page1
		{
			get
			{
				return this._web_page1.Entity;
			}
			set
			{
				web_page previousValue = this._web_page1.Entity;
				if (((previousValue != value) 
							|| (this._web_page1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._web_page1.Entity = null;
						previousValue.web_page_links1.Remove(this);
					}
					this._web_page1.Entity = value;
					if ((value != null))
					{
						value.web_page_links1.Add(this);
						this._linked_page_id = value.id;
					}
					else
					{
						this._linked_page_id = default(int);
					}
					this.SendPropertyChanged("web_page1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.web_keyword")]
	public partial class web_keyword : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _keyword;
		
		private System.DateTime _last_search_date;
		
		private EntitySet<web_page_keyword> _web_page_keywords;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnkeywordChanging(string value);
    partial void OnkeywordChanged();
    partial void Onlast_search_dateChanging(System.DateTime value);
    partial void Onlast_search_dateChanged();
    #endregion
		
		public web_keyword()
		{
			this._web_page_keywords = new EntitySet<web_page_keyword>(new Action<web_page_keyword>(this.attach_web_page_keywords), new Action<web_page_keyword>(this.detach_web_page_keywords));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keyword", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string keyword
		{
			get
			{
				return this._keyword;
			}
			set
			{
				if ((this._keyword != value))
				{
					this.OnkeywordChanging(value);
					this.SendPropertyChanging();
					this._keyword = value;
					this.SendPropertyChanged("keyword");
					this.OnkeywordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_search_date", DbType="DateTime NOT NULL")]
		public System.DateTime last_search_date
		{
			get
			{
				return this._last_search_date;
			}
			set
			{
				if ((this._last_search_date != value))
				{
					this.Onlast_search_dateChanging(value);
					this.SendPropertyChanging();
					this._last_search_date = value;
					this.SendPropertyChanged("last_search_date");
					this.Onlast_search_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="web_keyword_web_page_keyword", Storage="_web_page_keywords", ThisKey="id", OtherKey="web_keyword_id")]
		public EntitySet<web_page_keyword> web_page_keywords
		{
			get
			{
				return this._web_page_keywords;
			}
			set
			{
				this._web_page_keywords.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_web_page_keywords(web_page_keyword entity)
		{
			this.SendPropertyChanging();
			entity.web_keyword = this;
		}
		
		private void detach_web_page_keywords(web_page_keyword entity)
		{
			this.SendPropertyChanging();
			entity.web_keyword = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.web_page")]
	public partial class web_page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _web_domain_id;
		
		private string _page_url;
		
		private System.DateTime _index_date;
		
		private string _title;
		
		private EntitySet<web_page_link> _web_page_links;
		
		private EntitySet<web_page_link> _web_page_links1;
		
		private EntitySet<web_page_keyword> _web_page_keywords;
		
		private EntityRef<web_domain> _web_domain;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onweb_domain_idChanging(int value);
    partial void Onweb_domain_idChanged();
    partial void Onpage_urlChanging(string value);
    partial void Onpage_urlChanged();
    partial void Onindex_dateChanging(System.DateTime value);
    partial void Onindex_dateChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    #endregion
		
		public web_page()
		{
			this._web_page_links = new EntitySet<web_page_link>(new Action<web_page_link>(this.attach_web_page_links), new Action<web_page_link>(this.detach_web_page_links));
			this._web_page_links1 = new EntitySet<web_page_link>(new Action<web_page_link>(this.attach_web_page_links1), new Action<web_page_link>(this.detach_web_page_links1));
			this._web_page_keywords = new EntitySet<web_page_keyword>(new Action<web_page_keyword>(this.attach_web_page_keywords), new Action<web_page_keyword>(this.detach_web_page_keywords));
			this._web_domain = default(EntityRef<web_domain>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_web_domain_id", DbType="Int NOT NULL")]
		public int web_domain_id
		{
			get
			{
				return this._web_domain_id;
			}
			set
			{
				if ((this._web_domain_id != value))
				{
					if (this._web_domain.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onweb_domain_idChanging(value);
					this.SendPropertyChanging();
					this._web_domain_id = value;
					this.SendPropertyChanged("web_domain_id");
					this.Onweb_domain_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_page_url", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string page_url
		{
			get
			{
				return this._page_url;
			}
			set
			{
				if ((this._page_url != value))
				{
					this.Onpage_urlChanging(value);
					this.SendPropertyChanging();
					this._page_url = value;
					this.SendPropertyChanged("page_url");
					this.Onpage_urlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_index_date", DbType="DateTime NOT NULL")]
		public System.DateTime index_date
		{
			get
			{
				return this._index_date;
			}
			set
			{
				if ((this._index_date != value))
				{
					this.Onindex_dateChanging(value);
					this.SendPropertyChanging();
					this._index_date = value;
					this.SendPropertyChanged("index_date");
					this.Onindex_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="VarChar(256)")]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="web_page_web_page_link", Storage="_web_page_links", ThisKey="id", OtherKey="web_page_id")]
		public EntitySet<web_page_link> web_page_links
		{
			get
			{
				return this._web_page_links;
			}
			set
			{
				this._web_page_links.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="web_page_web_page_link1", Storage="_web_page_links1", ThisKey="id", OtherKey="linked_page_id")]
		public EntitySet<web_page_link> web_page_links1
		{
			get
			{
				return this._web_page_links1;
			}
			set
			{
				this._web_page_links1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="web_page_web_page_keyword", Storage="_web_page_keywords", ThisKey="id", OtherKey="web_page_id")]
		public EntitySet<web_page_keyword> web_page_keywords
		{
			get
			{
				return this._web_page_keywords;
			}
			set
			{
				this._web_page_keywords.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="web_domain_web_page", Storage="_web_domain", ThisKey="web_domain_id", OtherKey="id", IsForeignKey=true)]
		public web_domain web_domain
		{
			get
			{
				return this._web_domain.Entity;
			}
			set
			{
				web_domain previousValue = this._web_domain.Entity;
				if (((previousValue != value) 
							|| (this._web_domain.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._web_domain.Entity = null;
						previousValue.web_pages.Remove(this);
					}
					this._web_domain.Entity = value;
					if ((value != null))
					{
						value.web_pages.Add(this);
						this._web_domain_id = value.id;
					}
					else
					{
						this._web_domain_id = default(int);
					}
					this.SendPropertyChanged("web_domain");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_web_page_links(web_page_link entity)
		{
			this.SendPropertyChanging();
			entity.web_page = this;
		}
		
		private void detach_web_page_links(web_page_link entity)
		{
			this.SendPropertyChanging();
			entity.web_page = null;
		}
		
		private void attach_web_page_links1(web_page_link entity)
		{
			this.SendPropertyChanging();
			entity.web_page1 = this;
		}
		
		private void detach_web_page_links1(web_page_link entity)
		{
			this.SendPropertyChanging();
			entity.web_page1 = null;
		}
		
		private void attach_web_page_keywords(web_page_keyword entity)
		{
			this.SendPropertyChanging();
			entity.web_page = this;
		}
		
		private void detach_web_page_keywords(web_page_keyword entity)
		{
			this.SendPropertyChanging();
			entity.web_page = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.web_page_keyword")]
	public partial class web_page_keyword : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _web_keyword_id;
		
		private int _web_page_id;
		
		private EntityRef<web_keyword> _web_keyword;
		
		private EntityRef<web_page> _web_page;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onweb_keyword_idChanging(int value);
    partial void Onweb_keyword_idChanged();
    partial void Onweb_page_idChanging(int value);
    partial void Onweb_page_idChanged();
    #endregion
		
		public web_page_keyword()
		{
			this._web_keyword = default(EntityRef<web_keyword>);
			this._web_page = default(EntityRef<web_page>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_web_keyword_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int web_keyword_id
		{
			get
			{
				return this._web_keyword_id;
			}
			set
			{
				if ((this._web_keyword_id != value))
				{
					if (this._web_keyword.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onweb_keyword_idChanging(value);
					this.SendPropertyChanging();
					this._web_keyword_id = value;
					this.SendPropertyChanged("web_keyword_id");
					this.Onweb_keyword_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_web_page_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int web_page_id
		{
			get
			{
				return this._web_page_id;
			}
			set
			{
				if ((this._web_page_id != value))
				{
					if (this._web_page.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onweb_page_idChanging(value);
					this.SendPropertyChanging();
					this._web_page_id = value;
					this.SendPropertyChanged("web_page_id");
					this.Onweb_page_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="web_keyword_web_page_keyword", Storage="_web_keyword", ThisKey="web_keyword_id", OtherKey="id", IsForeignKey=true)]
		public web_keyword web_keyword
		{
			get
			{
				return this._web_keyword.Entity;
			}
			set
			{
				web_keyword previousValue = this._web_keyword.Entity;
				if (((previousValue != value) 
							|| (this._web_keyword.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._web_keyword.Entity = null;
						previousValue.web_page_keywords.Remove(this);
					}
					this._web_keyword.Entity = value;
					if ((value != null))
					{
						value.web_page_keywords.Add(this);
						this._web_keyword_id = value.id;
					}
					else
					{
						this._web_keyword_id = default(int);
					}
					this.SendPropertyChanged("web_keyword");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="web_page_web_page_keyword", Storage="_web_page", ThisKey="web_page_id", OtherKey="id", IsForeignKey=true)]
		public web_page web_page
		{
			get
			{
				return this._web_page.Entity;
			}
			set
			{
				web_page previousValue = this._web_page.Entity;
				if (((previousValue != value) 
							|| (this._web_page.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._web_page.Entity = null;
						previousValue.web_page_keywords.Remove(this);
					}
					this._web_page.Entity = value;
					if ((value != null))
					{
						value.web_page_keywords.Add(this);
						this._web_page_id = value.id;
					}
					else
					{
						this._web_page_id = default(int);
					}
					this.SendPropertyChanged("web_page");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
